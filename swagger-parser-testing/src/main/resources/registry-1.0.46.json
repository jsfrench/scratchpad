{"swagger":"2.0","info":{"description":"The registry API for SwaggerHub","version":"1.0.46","title":"SwaggerHub Registry API","contact":{"name":"SwaggerHub","url":"http://swaggerhub.com","email":"info@swaggerhub.com"}},"host":"api.swaggerhub.com","tags":[{"name":"APIs"},{"name":"Domains"},{"name":"Plugins"},{"name":"Support"}],"schemes":["https"],"produces":["application/json"],"paths":{"/apis/{owner}/{api}/{version}/settings/github":{"get":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Retrieves export settings for the specified API","description":"","operationId":"getGitHubExportSettings","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"export settings for this API","schema":{"$ref":"#/definitions/GitHubExportSettings"}},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]}]},"put":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Updates export settings for the specified API","description":"","operationId":"setGitHubExportSettings","consumes":["application/json"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"in":"body","name":"settings","description":"Export settings","required":true,"schema":{"$ref":"#/definitions/GitHubExportSettings"}}],"responses":{"200":{"description":"export settings were successfully stored"},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}/settings/lifecycle":{"get":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Retrieves lifecycle settings for the specified API","description":"","operationId":"getLifecycleSettings","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"lifecycle settings for the specified API","schema":{"$ref":"#/definitions/LifecycleSettings"}},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]}]},"put":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Updates lifecycle settings for the specified API","description":"","operationId":"setLifecycleSettings","consumes":["application/json"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"in":"body","name":"settings","description":"lifecycle settings","required":true,"schema":{"$ref":"#/definitions/LifecycleSettings"}},{"$ref":"#/parameters/force"}],"responses":{"200":{"description":"lifecycle settings were successfully stored"},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}/settings/private":{"get":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Retrieves private settings for the specified API","description":"","operationId":"getPrivateSettings","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"private settings for the specified API","schema":{"$ref":"#/definitions/Private"}},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]}]},"put":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Updates private settings for the specified API","description":"","operationId":"setPrivateSettings","consumes":["application/json"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"in":"body","name":"settings","description":"private settings","required":true,"schema":{"$ref":"#/definitions/Private"}}],"responses":{"200":{"description":"private settings were successfully stored"},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/private/count":{"get":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Returns the number of private APIs for the user","description":"","operationId":"getPrivateAPIsCount","parameters":[{"$ref":"#/parameters/owner"}],"responses":{"200":{"description":"number private APIs for the specified user","schema":{"type":"integer","format":"int32"}},"403":{"description":"access denied"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/.meta":{"get":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Retrieves metadata for the specified API","description":"","operationId":"getApiMetadata","produces":["application/json"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"}],"responses":{"200":{"description":"metadata for this API","schema":{"$ref":"#/definitions/ApiMetadata"}},"404":{"description":"no metadata was found"}},"security":[{"TokenSecured":[]},{}]},"put":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Updates metadata for the specified API","description":"","operationId":"setApiMetadata","consumes":["application/json"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"in":"body","name":"metadata","description":"metadata for this API","required":true,"schema":{"$ref":"#/definitions/ApiMetadata"}}],"responses":{"200":{"description":"the metadata was successfully saved"},"403":{"description":"access denied"},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]}]}},"/apis":{"get":{"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Retrieves a list of currently defined APIs in APIs.json format.","description":"","operationId":"searchApis","parameters":[{"$ref":"#/parameters/filter"},{"name":"query","in":"query","description":"free text query to match","required":false,"type":"string"},{"$ref":"#/parameters/state"},{"name":"tag","in":"query","description":"matches against tags associated with an API","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"$ref":"#/parameters/page"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/sort"},{"$ref":"#/parameters/order"}],"responses":{"303":{"description":"303 response","headers":{"Location":{"type":"string"}}}},"security":[{"TokenSecured":[]},{}]}},"/apis/{owner}":{"get":{"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","operationId":"getOwnerApis","summary":"Retrieves an APIs.json listing of all APIs defined for this owner","description":"","parameters":[{"$ref":"#/parameters/filter"},{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/page"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/sort"},{"$ref":"#/parameters/order"}],"responses":{"200":{"description":"a list of APIs in APIs.json format","schema":{"$ref":"#/definitions/ApisJson"}}},"security":[{"TokenSecured":[]},{}]},"put":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","operationId":"updateOwner","summary":"Updates owner","parameters":[{"$ref":"#/parameters/owner"},{"in":"query","name":"newNameToken","description":"Token for updating owner name","type":"string","required":true}],"responses":{"200":{"description":"Owner was updated"}},"security":[{"TokenSecured":[]}]},"delete":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Deletes all APIs","description":"","operationId":"deleteAll","parameters":[{"$ref":"#/parameters/owner"}],"responses":{"200":{"description":"APIs were successfully deleted"},"403":{"description":"access denied"},"404":{"description":"specified owner not found"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}":{"get":{"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Retrieves an APIs.json listing for all API versions for this owner and API","operationId":"getApiVersions","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"}],"responses":{"200":{"description":"a list of API versions in APIs.json format","schema":{"$ref":"#/definitions/ApisJson"}}},"security":[{"TokenSecured":[]},{}]},"post":{"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Saves the provided Swagger definition","description":"Saves the provided Swagger definition; the owner must match the token owner. The version will be extracted from the Swagger definitions itself.","operationId":"saveDefinition","consumes":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/isPrivate"},{"name":"version","in":"query","description":"api version","type":"string"},{"$ref":"#/parameters/apiDefinition"},{"$ref":"#/parameters/force"}],"responses":{"200":{"description":"the API was successfully saved"},"201":{"description":"new API was successfully saved"},"205":{"description":"the API was successfully saved and should be reloaded"},"400":{"description":"the Swagger definition was invalid"},"403":{"description":"maximum number of APIs reached"},"409":{"description":"can not overwrite a published API version"},"415":{"description":"invalid content type"}},"security":[{"TokenSecured":[]}]},"delete":{"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Deletes the specified API","description":"","operationId":"deleteApi","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"}],"responses":{"200":{"description":"the API was successfully deleted"},"403":{"description":"access denied"},"404":{"description":"specified API not found"},"409":{"description":"the API has published versions and can not be deleted"}},"security":[{"TokenSecured":[]}]}},"/apis/.template":{"get":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","tags":["APIs"],"summary":"Retrieves list of apis templates","operationId":"getApiTemplates","produces":["application/json"],"responses":{"200":{"description":"template catalog","schema":{"$ref":"#/definitions/TemplateCatalog"}}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/.template":{"post":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","tags":["APIs"],"summary":"Creates API by template","description":"","operationId":"saveApiDefinitionByTemplate","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/isPrivate"},{"$ref":"#/parameters/template"}],"responses":{"200":{"description":"API was successfully saved"},"201":{"description":"new API was successfully saved"},"205":{"description":"the API was successfully saved and should be reloaded"},"403":{"description":"maximum number of APIs reached"},"409":{"description":"can not overwrite a published API version"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/.newname":{"post":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","tags":["APIs"],"summary":"Renames API","operationId":"renameApi","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/newName"}],"responses":{"200":{"description":"API was successfully renamed"},"409":{"description":"API or domain with the new name already exists"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/.collaboration":{"get":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","tags":["APIs"],"summary":"Gets API's collaboration","operationId":"getCollaboration","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"name":"expandTeams","in":"query","type":"boolean","required":false,"default":false}],"responses":{"200":{"description":"the existing collaboration on an API","schema":{"$ref":"#/definitions/Collaboration"}}}},"put":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","tags":["APIs"],"summary":"Updates API's collaboration","operationId":"updateCollaboration","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"in":"body","name":"body","required":false,"schema":{"$ref":"#/definitions/Collaboration"}}],"responses":{"default":{"description":"successfully updated API collaboration"}}},"delete":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","tags":["APIs"],"summary":"Deletes API's collaboration","operationId":"deleteCollaboration","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"}],"responses":{"default":{"description":"successfully deleted a collaboration"}}}},"/apis/{owner}/{api}/.transfer":{"post":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"transfers api to another owner","description":"","operationId":"transferApi","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/newOwner"},{"in":"query","name":"transferIntegrations","description":"Transfer integrations","required":false,"type":"boolean"}],"responses":{"200":{"description":"the Swagger API was transfered","schema":{"type":"object"}}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}":{"get":{"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Retrieves the Swagger definition for the specified API and version","description":"","operationId":"getDefinition","produces":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"the Swagger API in requested format","schema":{"type":"object"}},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]},{}]},"delete":{"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Deletes a particular version of the specified API","description":"","operationId":"deleteApiVersion","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"the API version was successfully deleted"},"403":{"description":"access denied"},"404":{"description":"specified API not found"},"409":{"description":"the API version is published and can not be deleted or it is the only version of this API"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}/.fork":{"post":{"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Forks the provided Swagger definition","description":"Forks the provided Swagger definition.","operationId":"forkApi","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/isPrivate"},{"in":"body","name":"newSpec","description":"New spec id","required":true,"schema":{"$ref":"#/definitions/SpecId"}},{"$ref":"#/parameters/force"}],"responses":{"201":{"description":"the API was successfully forked"},"403":{"description":"maximum number of APIs reached"},"409":{"description":"can not overwrite existing API"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}/.bump":{"post":{"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Adds API version","description":"Adds API version.","operationId":"bumpApi","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/isPrivate"},{"in":"query","name":"newVersion","description":"New api version","required":true,"type":"string"},{"$ref":"#/parameters/force"}],"responses":{"201":{"description":"the API was successfully forked"},"403":{"description":"maximum number of API versions reached"},"409":{"description":"can not overwrite existing API"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}/compare":{"get":{"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Compares two APIs","description":"Compares two APIs","operationId":"compareApis","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/method"},{"in":"query","name":"otherApiPath","description":"URL to external API or path to internal API","required":true,"type":"string"}],"responses":{"200":{"description":"the two APIs were successfully compared","schema":{"$ref":"#/definitions/Comparison"}},"401":{"description":"the API to compare with was not accessible"},"404":{"description":"the API to compare with was not found"}},"security":[{"TokenSecured":[]}]},"post":{"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Compares two APIs","description":"Compares two APIs","operationId":"compareApisFromFile","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/method"},{"in":"body","name":"definition","description":"the definition parsed from an uploaded file.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"the two APIs were successfully compared","schema":{"$ref":"#/definitions/Comparison"}},"403":{"description":"access denied"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}/swagger.json":{"get":{"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Retrieves the Swagger definition for the specified API and version in JSON format","description":"","operationId":"getJsonDefinition","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"the Swagger API in JSON format","schema":{"type":"object"}},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]},{}]}},"/apis/{owner}/{api}/{version}/swagger.yaml":{"get":{"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Retrieves the Swagger definition for the specified API and version in YAML format","description":"","operationId":"getYamlDefinition","produces":["application/yaml"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"the Swagger API in YAML format","schema":{"type":"object"}},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]},{}]}},"/apis/{owner}/{api}/{version}/.codegen/{generatorType}/lang":{"get":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Retrieves codegen languages options for the specified API","description":"","operationId":"getCodegenLanguagesOptions","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/generatorType"}],"responses":{"200":{"description":"codegen languages options for the specified API","schema":{"type":"object","additionalProperties":{"$ref":"#/definitions/CodegenLanguage"}}},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}/.codegen/{generatorType}/lang/{language}":{"get":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Retrieves codegen language options for the specified API","description":"","operationId":"getCodegenLanguageOptions","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/generatorType"},{"in":"path","name":"language","description":"language name","required":true,"type":"string"}],"responses":{"200":{"description":"codegen language options for the specified API","schema":{"$ref":"#/definitions/CodegenLanguage"}},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]}]},"post":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Saves codegen language options for the specified API","description":"","operationId":"setCodegenLanguageOptions","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/generatorType"},{"in":"path","name":"language","description":"language name","required":true,"type":"string"},{"in":"body","name":"language options","description":"language options","required":true,"schema":{"$ref":"#/definitions/CodegenLanguage"}}],"responses":{"200":{"description":"codegen language options was succesfully saved"},"403":{"description":"access denied"},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]}]},"delete":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Delete codegen language options for the specified API","description":"","operationId":"deleteCodegenLanguageOptions","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/generatorType"},{"in":"path","name":"language","description":"language name","required":true,"type":"string"}],"responses":{"200":{"description":"codegen language options was succesfully deleted"},"403":{"description":"access denied"},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}/.comment":{"get":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Returns the list of comments for the specified API","operationId":"getApiComments","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"comments for the specified API","schema":{"type":"array","items":{"$ref":"#/definitions/ClosableComment"}}},"204":{"description":"no comments were found for the specified API"},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]}]},"post":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Adds a new comment to the specified API","operationId":"addApiComment","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/NewComment"}}],"responses":{"201":{"description":"newly created comment for the specified API","schema":{"$ref":"#/definitions/ClosableComment"}},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}/.comment/batch":{"post":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Updates passed batch of comments","operationId":"updateApiComments","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/CommentsBatch"}}],"responses":{"200":{"description":"comments were updated"},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified API or comment or reply not found"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}/.comment/{comment}":{"patch":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Updates specified comment","operationId":"updateApiComment","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/comment"},{"name":"body","in":"body","schema":{"$ref":"#/definitions/ClosableCommentPatch"}}],"responses":{"200":{"description":"comment was updated","schema":{"$ref":"#/definitions/ClosableComment"}},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified API or comment was not found"}},"security":[{"TokenSecured":[]}]},"delete":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Deletes specified comment","operationId":"deleteApiComment","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/comment"}],"responses":{"200":{"description":"comment was deleted"},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified API or comment was not found"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}/.comment/{comment}/status/{status}":{"put":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Updates status to the specified comment","operationId":"setApiCommentStatus","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/comment"},{"$ref":"#/parameters/commentStatus"}],"responses":{"200":{"description":"comment status was updated"},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified API or comment not found"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}/.comment/{comment}/reply":{"post":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Adds a new reply to the specified comment","operationId":"addApiCommentReply","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/comment"},{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/NewReply"}}],"responses":{"201":{"description":"newly created reply","schema":{"type":"array","items":{"$ref":"#/definitions/Comment"}}},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified API or comment not found"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}/.comment/{comment}/reply/{reply}":{"patch":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Updates specified comment reply","operationId":"updateApiCommentReply","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/comment"},{"$ref":"#/parameters/reply"},{"name":"body","in":"body","schema":{"$ref":"#/definitions/CommentPatch"}}],"responses":{"200":{"description":"comment reply was updated","schema":{"$ref":"#/definitions/Comment"}},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified API or comment or reply was not found"}},"security":[{"TokenSecured":[]}]},"delete":{"x-inflector-hidden":true,"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Deletes specified comment reply","operationId":"deleteApiCommentReply","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/comment"},{"$ref":"#/parameters/reply"}],"responses":{"200":{"description":"comment reply was deleted"},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified API or comment or reply was not found"}},"security":[{"TokenSecured":[]}]}},"/apis/{owner}/{api}/{version}/.draft":{"put":{"x-inflector-hidden":true,"tags":["Drafts"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Saves the provided draft for a Swagger definition","description":"Saves the provided draft for a swagger definition.","operationId":"saveDraft","consumes":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/apiDefinition"}],"responses":{"200":{"description":"the draft was successfully saved"},"201":{"description":"new draft was successfully saved"},"205":{"description":"the draft was successfully saved and should be reloaded"},"400":{"description":"the Swagger definition was invalid"},"403":{"description":"maximum number of drafts reached"},"415":{"description":"invalid content type"}},"security":[{"TokenSecured":[]}]},"get":{"x-inflector-hidden":true,"tags":["Drafts"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Retrieves the draft for the specified API and version","description":"","operationId":"getDraft","produces":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"the draft in requested format","schema":{"type":"object"}},"404":{"description":"specified draft not found"}},"security":[{"TokenSecured":[]},{}]},"delete":{"x-inflector-hidden":true,"tags":["Drafts"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Deletes a particular version of the specified API","description":"","operationId":"deleteDraftApi","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/api"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"the draft was successfully deleted"},"403":{"description":"access denied"},"404":{"description":"specified API not found"}},"security":[{"TokenSecured":[]}]}},"/domains":{"get":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Retrieves a list of currently defined domains in APIs.json format","operationId":"searchDomains","parameters":[{"$ref":"#/parameters/filter"},{"name":"query","in":"query","description":"free text query to match","required":false,"type":"string"},{"$ref":"#/parameters/state"},{"name":"tag","in":"query","description":"matches against tags associated with a domain","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"$ref":"#/parameters/page"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/sort"},{"$ref":"#/parameters/order"}],"responses":{"303":{"description":"303 response","headers":{"Location":{"type":"string"}}}},"security":[{"TokenSecured":[]},{}]}},"/domains/{owner}":{"get":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Retrieves an APIs.json listing of all domains defined for this owner","operationId":"getOwnerDomains","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/page"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/sort"},{"$ref":"#/parameters/order"}],"responses":{"200":{"description":"a list of domains in APIs.json format","schema":{"$ref":"#/definitions/ApisJson"}}},"security":[{"TokenSecured":[]},{}]}},"/domains/{owner}/.refs":{"get":{"x-inflector-hidden":true,"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Retrieves an APIs.json listing of entries referensing owner domains","operationId":"getOwnerReferences","parameters":[{"$ref":"#/parameters/owner"}],"responses":{"200":{"description":"a list of APIs and domains in APIs.json format","schema":{"$ref":"#/definitions/ApisJson"}}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/.suggest/{type}":{"get":{"tags":["Domains"],"x-inflector-hidden":true,"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Suggests domain entites of the specified type by their name","operationId":"suggestDomainEntity","parameters":[{"$ref":"#/parameters/owner"},{"name":"type","in":"path","description":"entity type","required":true,"type":"string","enum":["pathitems","definitions","parameters","responses"]},{"name":"query","in":"query","description":"query string","required":true,"type":"string"}],"responses":{"200":{"description":"a list of domains in APIs.json format. Each entry will be listed with the 'X-Suggestion' property  which value will contain comma separated list of available definitions matching the query","schema":{"$ref":"#/definitions/ApisJson"}},"404":{"description":"specified owner not found"}},"security":[{"TokenSecured":[]},{}]}},"/domains/{owner}/{domain}":{"get":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Retrieves an APIs.json listing for all domain versions for this owner and domain","operationId":"getDomainVersions","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"}],"responses":{"200":{"description":"a list of domain versions in APIs.json format","schema":{"$ref":"#/definitions/ApisJson"}}},"security":[{"TokenSecured":[]},{}]},"post":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Saves the provided Swagger definition of a domain","operationId":"saveDomainDefinition","consumes":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/isPrivate"},{"name":"version","in":"query","description":"domain version","required":true,"type":"string"},{"$ref":"#/parameters/domainDefinition"},{"$ref":"#/parameters/force"}],"responses":{"200":{"description":"the domain was successfully saved"},"201":{"description":"new domain was successfully saved"},"205":{"description":"the domain was successfully saved and should be reloaded"},"403":{"description":"maximum number of domains reached"},"409":{"description":"can not overwrite a published domain version"},"415":{"description":"invalid content type"}},"security":[{"TokenSecured":[]}]},"delete":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Deletes the specified domain","operationId":"deleteDomain","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/force"}],"responses":{"200":{"description":"the domain was successfully deleted"},"403":{"description":"access denied"},"404":{"description":"specified domain not found"},"409":{"description":"the domain has published versions and can not be deleted"},"424":{"description":"can't delete because there are some dependencies for domain","schema":{"$ref":"#/definitions/Page"}}},"security":[{"TokenSecured":[]}]}},"/domains/.template":{"get":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Retrieves list of domains templates","operationId":"getDomainTemplates","produces":["application/json"],"responses":{"200":{"description":"template catalog","schema":{"$ref":"#/definitions/TemplateCatalog"}}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/{version}/.template":{"post":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Creates Domain by template","description":"","operationId":"saveDomainDefinitionByTemplate","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/isPrivate"},{"$ref":"#/parameters/template"}],"responses":{"200":{"description":"Domain was successfully saved"},"201":{"description":"new Domain was successfully saved"},"205":{"description":"the Domain was successfully saved and should be reloaded"},"403":{"description":"maximum number of Domains reached"},"409":{"description":"can not overwrite a published Domain version"}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/.newname":{"post":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Renames domain","operationId":"renameDomain","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/newName"},{"$ref":"#/parameters/force"}],"responses":{"200":{"description":"Domain was successfully renamed"},"409":{"description":"API or domain with the new name already exists"}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/.transfer":{"post":{"x-inflector-hidden":true,"tags":["Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"transfers domain to another owner","description":"","operationId":"transferDomain","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/newOwner"},{"$ref":"#/parameters/force"}],"responses":{"200":{"description":"the Swagger Domain was transfered","schema":{"type":"object"}}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/{version}":{"get":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Retrieves the Swagger definition for the specified domain and version","operationId":"getDomainDefinition","produces":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"the Swagger domain in requested format","schema":{"type":"object"}},"404":{"description":"specified domain not found"}},"security":[{"TokenSecured":[]},{}]},"delete":{"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Deletes a particular version of the specified domain","operationId":"deleteDomainVersion","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/force"}],"responses":{"200":{"description":"the domain version was successfully deleted"},"403":{"description":"access denied"},"404":{"description":"specified domain not found"},"409":{"description":"the domain version is published and can not be deleted or it is the only version of this API"},"424":{"description":"can't delete because there are some dependencies for domain","schema":{"$ref":"#/definitions/Page"}}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/{version}/.fork":{"post":{"tags":["Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Forks the provided domain definition","description":"Forks the provided domain definition.","operationId":"forkDomain","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/isPrivate"},{"in":"body","name":"newSpec","description":"New spec id","required":true,"schema":{"$ref":"#/definitions/SpecId"}},{"$ref":"#/parameters/force"}],"responses":{"201":{"description":"the domain was successfully forked"},"403":{"description":"maximum number of domains reached"},"409":{"description":"can not overwrite existing domain"}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/{version}/.bump":{"post":{"tags":["Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Adds domain version","description":"Adds domain version.","operationId":"bumpDomain","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/isPrivate"},{"in":"query","name":"newVersion","description":"New domain version","required":true,"type":"string"},{"$ref":"#/parameters/force"}],"responses":{"201":{"description":"the domain was successfully created"},"403":{"description":"maximum number of domain versions reached"},"409":{"description":"can not overwrite existing domain"}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/{version}/domain.json":{"get":{"tags":["Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Retrieves the definition for the specified domain and version in JSON format","operationId":"getDomainJsonDefinition","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"definition in JSON format","schema":{"type":"object"}},"404":{"description":"specified domain not found"}},"security":[{"TokenSecured":[]},{}]}},"/domains/{owner}/{domain}/{version}/domain.yaml":{"get":{"tags":["Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Retrieves the definition for the specified domain and version in YAML format","operationId":"getDomainYamlDefinition","produces":["application/yaml"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"definition in YAML format","schema":{"type":"object"}},"404":{"description":"specified domain not found"}},"security":[{"TokenSecured":[]},{}]}},"/domains/{owner}/{domain}/{version}/settings/github":{"get":{"x-inflector-hidden":true,"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Retrieves export settings for the specified domain","description":"","operationId":"getDomainExportSettings","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"export settings for this domain","schema":{"$ref":"#/definitions/GitHubExportSettings"}},"404":{"description":"specified domain not found"}},"security":[{"TokenSecured":[]}]},"put":{"x-inflector-hidden":true,"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Updates export settings for the specified domain","description":"","operationId":"setDomainExportSettings","consumes":["application/json"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"in":"body","name":"settings","description":"Export settings","required":true,"schema":{"$ref":"#/definitions/GitHubExportSettings"}}],"responses":{"200":{"description":"export settings were successfully stored"},"404":{"description":"specified domain not found"}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/{version}/settings/lifecycle":{"get":{"x-inflector-hidden":true,"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Retrieves lifecycle settings for the specified domain","description":"","operationId":"getDomainLifecycleSettings","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"lifecycle settings for the specified domain","schema":{"$ref":"#/definitions/LifecycleSettings"}},"404":{"description":"specified domain not found"}},"security":[{"TokenSecured":[]}]},"put":{"x-inflector-hidden":true,"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Updates lifecycle settings for the specified domain","description":"","operationId":"setDomainLifecycleSettings","consumes":["application/json"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"in":"body","name":"settings","description":"lifecycle settings","required":true,"schema":{"$ref":"#/definitions/LifecycleSettings"}},{"$ref":"#/parameters/force"}],"responses":{"200":{"description":"lifecycle settings were successfully stored"},"404":{"description":"specified domain not found"},"424":{"description":"can't update because there are some dependencies for domain","schema":{"$ref":"#/definitions/Page"}}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/{version}/settings/private":{"get":{"x-inflector-hidden":true,"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Retrieves private settings for the specified domain","description":"","operationId":"getDomainPrivateSettings","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"private settings for the specified domain","schema":{"$ref":"#/definitions/Private"}},"404":{"description":"specified domain not found"}},"security":[{"TokenSecured":[]}]},"put":{"x-inflector-hidden":true,"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Updates private settings for the specified domain","description":"","operationId":"setDomainPrivateSettings","consumes":["application/json"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"in":"body","name":"settings","description":"private settings","required":true,"schema":{"$ref":"#/definitions/Private"}},{"$ref":"#/parameters/force"}],"responses":{"200":{"description":"private settings were successfully stored"},"404":{"description":"specified domain not found"},"424":{"description":"can't update because there are some dependencies for domain","schema":{"$ref":"#/definitions/Page"}}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/.meta":{"get":{"x-inflector-hidden":true,"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Retrieves metadata for the specified domain","description":"","operationId":"getDomainMetadata","produces":["application/json"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"}],"responses":{"200":{"description":"metadata for this domain","schema":{"$ref":"#/definitions/ApiMetadata"}},"404":{"description":"no metadata was found"}},"security":[{"TokenSecured":[]},{}]},"put":{"x-inflector-hidden":true,"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","tags":["Domains"],"summary":"Updates metadata for the specified domain","description":"","operationId":"setDomainMetadata","consumes":["application/json"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"in":"body","name":"metadata","description":"metadata for this domain","required":true,"schema":{"$ref":"#/definitions/ApiMetadata"}}],"responses":{"200":{"description":"the metadata was successfully saved"},"403":{"description":"access denied"},"404":{"description":"specified domain not found"}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/{version}/.comment":{"get":{"x-inflector-hidden":true,"tags":["Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Returns the list of comments for the specified domain","operationId":"getDomainComments","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"comments for the specified domain","schema":{"type":"array","items":{"$ref":"#/definitions/ClosableComment"}}},"204":{"description":"no comments were found for the specified domain"},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified domain not found"}},"security":[{"TokenSecured":[]}]},"post":{"x-inflector-hidden":true,"tags":["Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Adds a new comment to the specified domain","operationId":"addDomainComment","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/NewComment"}}],"responses":{"200":{"description":"newly created comment for the specified domain","schema":{"$ref":"#/definitions/ClosableComment"}},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified domain not found"}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/{version}/.comment/batch":{"post":{"x-inflector-hidden":true,"tags":["Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Updates passed batch of comments","operationId":"updateDomainComments","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/CommentsBatch"}}],"responses":{"200":{"description":"comments were updated"},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified domain or comment or reply not found"}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/{version}/.comment/{comment}":{"patch":{"x-inflector-hidden":true,"tags":["Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Updates specified comment","operationId":"updateDomainComment","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/comment"},{"name":"body","in":"body","schema":{"$ref":"#/definitions/ClosableCommentPatch"}}],"responses":{"200":{"description":"comment was updated","schema":{"$ref":"#/definitions/ClosableComment"}},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified domain or comment was not found"}},"security":[{"TokenSecured":[]}]},"delete":{"x-inflector-hidden":true,"tags":["Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Deletes specified comment","operationId":"deleteDomainComment","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/comment"}],"responses":{"200":{"description":"comment was deleted"},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified domain or comment was not found"}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/{version}/.comment/{comment}/status/{status}":{"put":{"x-inflector-hidden":true,"tags":["Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Updates status to the specified comment","operationId":"setDomainCommentStatus","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/comment"},{"$ref":"#/parameters/commentStatus"}],"responses":{"200":{"description":"comment status was updated"},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified domain or comment not found"}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/{version}/.comment/{comment}/reply":{"post":{"x-inflector-hidden":true,"tags":["Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Adds a new reply to the specified comment","operationId":"addDomainCommentReply","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/comment"},{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/NewReply"}}],"responses":{"200":{"description":"newly created reply","schema":{"type":"array","items":{"$ref":"#/definitions/Comment"}}},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified domain or comment not found"}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/{version}/.comment/{comment}/reply/{reply}":{"patch":{"x-inflector-hidden":true,"tags":["Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Updates specified comment reply","operationId":"updateDomainCommentReply","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/comment"},{"$ref":"#/parameters/reply"},{"name":"body","in":"body","schema":{"$ref":"#/definitions/CommentPatch"}}],"responses":{"200":{"description":"comment reply was updated","schema":{"$ref":"#/definitions/Comment"}},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified domain or comment or reply was not found"}},"security":[{"TokenSecured":[]}]},"delete":{"x-inflector-hidden":true,"tags":["Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Deletes specified comment reply","operationId":"deleteDomainCommentReply","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/comment"},{"$ref":"#/parameters/reply"}],"responses":{"200":{"description":"comment reply was deleted"},"401":{"description":"access token is not set or invalid"},"404":{"description":"specified domain or comment or reply was not found"}},"security":[{"TokenSecured":[]}]}},"/domains/{owner}/{domain}/{version}/.draft":{"put":{"x-inflector-hidden":true,"tags":["Drafts"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Saves the provided draft for a domain.","description":"Saves the provided draft for a domain definition.","operationId":"saveDraftDomain","consumes":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"},{"$ref":"#/parameters/domainDefinition"}],"responses":{"200":{"description":"the draft was successfully saved"},"201":{"description":"new draft was successfully saved"},"205":{"description":"the draft was successfully saved"},"400":{"description":"the domain definition was invalid"},"415":{"description":"invalid content type"}},"security":[{"TokenSecured":[]}]},"get":{"x-inflector-hidden":true,"tags":["Drafts"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Retrieves the draft for the specified domain","description":"","operationId":"getDraftDomain","produces":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"the draft in requested format","schema":{"type":"object"}},"404":{"description":"specified draft not found"}},"security":[{"TokenSecured":[]},{}]},"delete":{"x-inflector-hidden":true,"tags":["Drafts"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.DomainsV1Service","summary":"Deletes a particular version of the specified Domain","description":"","operationId":"deleteDraftDomain","parameters":[{"$ref":"#/parameters/owner"},{"$ref":"#/parameters/domain"},{"$ref":"#/parameters/version"}],"responses":{"200":{"description":"the draft was successfully deleted"},"403":{"description":"access denied"},"404":{"description":"Draft domain not found"}},"security":[{"TokenSecured":[]}]}},"/plugins":{"get":{"x-inflector-hidden":true,"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","summary":"Retrieves a list of all available plugins (ignore system plugins)","description":"","operationId":"getAvailablePlugins","produces":["application/json"],"responses":{"200":{"description":"a list of plugins in json format","schema":{"type":"array","items":{"$ref":"#/definitions/PluginDefinition"}}},"403":{"description":"access denied"}},"security":[{"TokenSecured":[]}]},"post":{"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","x-inflector-hidden":true,"summary":"Register a plugin","description":"","operationId":"registerPlugin","consumes":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/pluginDefinition"}],"responses":{"200":{"description":"the Plugin was successfully registered"},"400":{"description":"the Plugin definition was invalid"},"403":{"description":"access denied"},"409":{"description":"cannot add plugin with same class and version of existing"},"415":{"description":"invalid content type"}},"security":[{"TokenSecured":[]}]}},"/plugins/{pluginId}":{"delete":{"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","x-inflector-hidden":true,"summary":"Disables a plugin","description":"","operationId":"disablePlugin","consumes":["application/json","application/yaml"],"parameters":[{"name":"pluginId","in":"path","type":"string","required":true}],"responses":{"200":{"description":"the Plugin was successfully disabled"},"403":{"description":"access denied"},"404":{"description":"the Plugin definition was not found"}},"security":[{"TokenSecured":[]}]}},"/plugins/configurations":{"get":{"x-inflector-hidden":true,"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","summary":"Retrieves a list of enabled plugin configurations","description":"Retrieves a list of enabled plugin configurations","operationId":"getPlugins","produces":["application/json"],"parameters":[{"name":"objectId","in":"query","description":"plugin configuration objectId","required":true,"type":"string"},{"$ref":"#/parameters/page"},{"$ref":"#/parameters/limit"}],"responses":{"200":{"description":"a list of plugin configurations in json format","schema":{"type":"array","items":{"$ref":"#/definitions/PluginConfiguration"}}},"403":{"description":"access denied"}},"security":[{"TokenSecured":[]}]},"post":{"x-inflector-hidden":true,"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","summary":"Saves the provided Plugin configuration","description":"Saves the provided Plugin configuration","operationId":"addPluginConfiguration","consumes":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/pluginConfiguration"},{"name":"trigger","in":"query","description":"if true, also execute plugin","required":false,"default":false,"type":"boolean"}],"responses":{"200":{"description":"the Plugin configuration was successfully saved"},"400":{"description":"the Plugin configuration was invalid"},"403":{"description":"access denied"},"409":{"description":"cannot add plugin configuration with same id"},"415":{"description":"invalid content type"}},"security":[{"TokenSecured":[]}]},"put":{"x-inflector-hidden":true,"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","summary":"Updated the provided Plugin configuration","description":"Updated the provided Plugin configuration","operationId":"updatePluginConfiguration","consumes":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/pluginConfiguration"},{"name":"trigger","in":"query","description":"if true, also execute plugin","required":false,"default":false,"type":"boolean"}],"responses":{"200":{"description":"the Plugin configuration was successfully updated"},"400":{"description":"the Plugin configuration was invalid"},"403":{"description":"access denied"},"404":{"description":"the Plugin configuration was not found"},"415":{"description":"invalid content type"}},"security":[{"TokenSecured":[]}]},"delete":{"x-inflector-hidden":true,"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","summary":"Deletes the provided Plugin configuration","description":"Deletes the provided Plugin configuration","operationId":"removePluginConfiguration","parameters":[{"$ref":"#/parameters/pluginConfiguration"}],"responses":{"200":{"description":"the Plugin configuration was successfully deleted"},"403":{"description":"access denied"},"404":{"description":"the Plugin configuration was not found"}},"security":[{"TokenSecured":[]}]}},"/plugins/configurations/draft":{"post":{"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","x-inflector-hidden":true,"summary":"Saves the provided Plugin configuration draft","description":"Saves the provided Plugin configuration draft","operationId":"addPluginConfigurationDraft","consumes":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/pluginConfiguration"}],"responses":{"200":{"description":"the Plugin configuration draft successfully saved","schema":{"$ref":"#/definitions/PluginConfiguration"}},"400":{"description":"the Plugin configuration was invalid"},"403":{"description":"access denied"},"409":{"description":"cannot add plugin configuration with same id"},"415":{"description":"invalid content type"}},"security":[{"TokenSecured":[]}]}},"/plugins/configurations/schema":{"post":{"x-inflector-hidden":true,"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","summary":"get configuration schema for the provided Plugin configuration","description":"Get configuration schema for the provided Plugin configuration","operationId":"buildConfigurationSchema","consumes":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/pluginConfiguration"}],"responses":{"200":{"description":"the configuration schema in json format","schema":{"type":"object"}},"400":{"description":"the Plugin configuration was invalid"},"403":{"description":"access denied"},"415":{"description":"invalid content type"}},"security":[{"TokenSecured":[]}]}},"/plugins/configurations/item/{id}":{"get":{"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","x-inflector-hidden":true,"summary":"returns plugin configuration identified by id","description":"returns plugin configuration identified by id","operationId":"loadPluginConfiguration","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"plugin configuration id","required":true,"type":"string"}],"responses":{"200":{"description":"the Plugin configuration identified by id","schema":{"$ref":"#/definitions/PluginConfiguration"}},"403":{"description":"access denied"}},"security":[{"TokenSecured":[]}]}},"/plugins/configurations/execute/{id}":{"post":{"x-inflector-hidden":true,"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","summary":"triggers execution of plugin configuration identified by id","description":"triggers execution of plugin configuration identified by id","operationId":"triggerPluginConfiguration","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"plugin configuration id","required":true,"type":"string"}],"responses":{"200":{"description":"successful execution"},"403":{"description":"access denied"}},"security":[{"TokenSecured":[]}]}},"/plugins/configurations/oauth/{userUuid}/{username}/{pluginConfigId}/{oauthProviderId}":{"get":{"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","x-inflector-hidden":true,"summary":"oauth callback url for plugins","description":"oauth callback url for plugins","operationId":"oauthCallback","parameters":[{"name":"userUuid","in":"path","description":"user uuid originally issueing the request","required":true,"type":"string"},{"name":"username","in":"path","description":"user originally issueing the request","required":true,"type":"string"},{"name":"pluginConfigId","in":"path","description":"plugin configuration temporary id","required":true,"type":"string"},{"name":"oauthProviderId","in":"path","description":"oAuth provider id (e.g. github)","required":true,"type":"string"},{"name":"code","in":"query","description":"oAuth callback code param","type":"string"},{"name":"state","in":"query","description":"oAuth callback state param","type":"string"}],"responses":{"302":{"description":"302 response","headers":{"Location":{"type":"string"}}}}}},"/plugins/configurations/oauth":{"get":{"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","x-inflector-hidden":true,"summary":"oauth callback url for plugins with query params","description":"oauth callback url for plugins with query params","operationId":"oauthCallbackWithQueryParams","parameters":[{"name":"userUuid","in":"query","description":"user uuid originally issueing the request","required":true,"type":"string"},{"name":"username","in":"query","description":"user originally issueing the request","required":true,"type":"string"},{"name":"pluginConfigId","in":"query","description":"plugin configuration temporary id","required":true,"type":"string"},{"name":"oauthProviderId","in":"query","description":"oAuth provider id (e.g. github)","required":true,"type":"string"},{"name":"code","in":"query","description":"oAuth callback code param","type":"string"},{"name":"state","in":"query","description":"oAuth callback state param","type":"string"}],"responses":{"302":{"description":"302 response","headers":{"Location":{"type":"string"}}}}}},"/plugins/systemconfigurations":{"get":{"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","x-inflector-hidden":true,"summary":"Gets system configurations","operationId":"getSystemPluginConfigurations","consumes":["application/json","application/yaml"],"parameters":[],"responses":{"200":{"description":"System Plugin configuration was successfully retrieved","schema":{"type":"array","items":{"$ref":"#/definitions/SystemPluginConfiguration"}}},"403":{"description":"access denied"}},"security":[{"TokenSecured":[]}]},"post":{"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","x-inflector-hidden":true,"summary":"Saves the provided System Plugin configuration","description":"Saves the provided System Plugin configuration","operationId":"addSystemPluginConfiguration","consumes":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/systemPluginConfiguration"}],"responses":{"200":{"description":"the System Plugin configuration was successfully saved"},"400":{"description":"the System Plugin configuration was invalid"},"403":{"description":"access denied"},"409":{"description":"cannot add System Plugin configuration with same id"},"415":{"description":"invalid content type"}},"security":[{"TokenSecured":[]}]},"put":{"tags":["Plugins"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.PluginsV1Service","x-inflector-hidden":true,"summary":"Updates the provided System Plugin configuration","description":"Updated the provided System Plugin configuration","operationId":"updateSystemPluginConfiguration","consumes":["application/json","application/yaml"],"parameters":[{"$ref":"#/parameters/systemPluginConfiguration"}],"responses":{"200":{"description":"the System Plugin configuration was successfully updated"},"400":{"description":"the System Plugin configuration was invalid"},"403":{"description":"access denied"},"404":{"description":"the System Plugin configuration was not found"},"415":{"description":"invalid content type"}},"security":[{"TokenSecured":[]}]}},"/token":{"post":{"tags":["APIs"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ApisV1Service","summary":"Retrieves an API token valid for the user identified by user object in body","description":"","operationId":"getApiTokenByCredentials","consumes":["application/json","application/yaml"],"parameters":[{"in":"body","name":"user","description":"user credentials","required":true,"schema":{"$ref":"#/definitions/UserCredentials"}}],"responses":{"200":{"description":"the API Token as string","schema":{"$ref":"#/definitions/AccessToken"}},"401":{"description":"API not allowed for github users"},"404":{"description":"cannot retrieve token for given user"}}}},"/support/email":{"post":{"tags":["Support"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.SupportV1Service","x-inflector-hidden":true,"summary":"Sends email to support team","operationId":"email","consumes":["multipart/form-data"],"parameters":[{"name":"name","description":"User name","type":"string","in":"formData","required":true},{"name":"email","description":"User email","type":"string","in":"formData","required":true},{"name":"subject","description":"Email subject","type":"string","in":"formData","required":true},{"name":"body","description":"Email body","type":"string","in":"formData","required":true},{"name":"attachment","type":"file","in":"formData","required":false}],"responses":{"200":{"description":"Success"}}}},"/specs":{"get":{"tags":["APIs","Domains"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.SearchV1Service","summary":"Retrieves a list of currently defined APIs and Domains in APIs.json format","description":"","operationId":"searchApisAndDomains","parameters":[{"$ref":"#/parameters/specType"},{"$ref":"#/parameters/visibility"},{"$ref":"#/parameters/state"},{"name":"owner","in":"query","description":"API or Domaion owner identifier. Can be username or organization name","required":false,"type":"string"},{"name":"project","in":"query","description":"project identifier. Must be used in conjunction with owner parameter","required":false,"type":"string"},{"$ref":"#/parameters/filter"},{"name":"query","in":"query","description":"free text query to match","required":false,"type":"string"},{"$ref":"#/parameters/page"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/sort"},{"$ref":"#/parameters/order"}],"responses":{"200":{"description":"a list of APIs and Domains in APIs.json format","schema":{"$ref":"#/definitions/ApisJson"}}},"security":[{"TokenSecured":[]},{}]}},"/projects/org/{orgName}/objectId/{objectId}":{"get":{"tags":["Projects"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ProjectsV1Service","summary":"get projects including specific api or domain","description":"","operationId":"getSpecProjects","produces":["application/json"],"parameters":[{"in":"path","name":"orgName","description":"organization name","required":true,"type":"string"},{"in":"path","name":"objectId","description":"api or domain id","required":true,"type":"string"}],"responses":{"200":{"description":"projects including specific api or domain","schema":{"type":"array","items":{"$ref":"#/definitions/ProjectEntry"}}}},"security":[{"TokenSecured":[]}]}},"/projects/org/{orgName}/id/{projectId}":{"get":{"tags":["Projects"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ProjectsV1Service","summary":"get specific project by organization and id","description":"","operationId":"getProject","produces":["application/json"],"parameters":[{"in":"path","name":"orgName","description":"organization name","required":true,"type":"string"},{"in":"path","name":"projectId","description":"project id","required":true,"type":"string"}],"responses":{"200":{"description":"the project","schema":{"$ref":"#/definitions/ProjectEntry"}},"404":{"description":"specified project not found"}},"security":[{"TokenSecured":[]}]},"put":{"tags":["Projects"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ProjectsV1Service","summary":"save project","description":"","operationId":"saveProject","parameters":[{"in":"path","name":"orgName","description":"organization name","required":true,"type":"string"},{"in":"path","name":"projectId","description":"project id","required":true,"type":"string"},{"$ref":"#/parameters/project"},{"$ref":"#/parameters/forceUpdateProject"}],"responses":{"200":{"description":"project was successfully stored"},"422":{"description":"project members or teams are not collaborator of projet specs","schema":{"$ref":"#/definitions/NotCollaboratorProjectMembers"}}},"security":[{"TokenSecured":[]}]},"delete":{"tags":["Projects"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ProjectsV1Service","x-inflector-hidden":true,"summary":"delete project","description":"","operationId":"deleteProject","parameters":[{"in":"path","name":"orgName","description":"organization name","required":true,"type":"string"},{"in":"path","name":"projectId","description":"project id","required":true,"type":"string"}],"responses":{"200":{"description":"project was successfully deleted"},"404":{"description":"specified project not found"}},"security":[{"TokenSecured":[]}]}},"/projects/org/{orgName}/id/{projectId}/members":{"get":{"tags":["Projects"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ProjectsV1Service","summary":"get project members","description":"","operationId":"getProjectMembers","produces":["application/json"],"parameters":[{"in":"path","name":"orgName","description":"organization name","required":true,"type":"string"},{"in":"path","name":"projectId","description":"project id","required":true,"type":"string"}],"responses":{"200":{"description":"project members","schema":{"type":"array","items":{"$ref":"#/definitions/ProjectMember"}}},"404":{"description":"specified project not found"}},"security":[{"TokenSecured":[]}]},"put":{"tags":["Projects"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ProjectsV1Service","summary":"update project members","description":"","operationId":"updateProjectMembers","consumes":["application/json"],"parameters":[{"in":"path","name":"orgName","description":"organization name","required":true,"type":"string"},{"in":"path","name":"projectId","description":"project id","required":true,"type":"string"},{"$ref":"#/parameters/projectMemberList"},{"$ref":"#/parameters/forceUpdateProject"}],"responses":{"200":{"description":"project members were successfully stored"},"422":{"description":"project members or teams are not collaborator of projet specs","schema":{"$ref":"#/definitions/NotCollaboratorProjectMembers"}}},"security":[{"TokenSecured":[]}]}},"/projects":{"get":{"tags":["Projects"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ProjectsV1Service","summary":"get projects for user identified by token","description":"","operationId":"getUserProjects","produces":["application/json"],"parameters":[{"name":"nameOnly","in":"query","description":"exclude API and Domain information","required":false,"type":"boolean","default":false},{"$ref":"#/parameters/page"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/sort"},{"$ref":"#/parameters/order"}],"responses":{"200":{"description":"user projects","schema":{"$ref":"#/definitions/ProjectsJson"}}},"security":[{"TokenSecured":[]}]}},"/projects/org/{orgName}":{"get":{"tags":["Projects"],"x-swagger-router-controller":"com.smartbear.swaggerhub.registry.service.ProjectsV1Service","summary":"get projects belonging to specific org","description":"","operationId":"getOrgProjects","produces":["application/json"],"parameters":[{"in":"path","name":"orgName","description":"organization name","required":true,"type":"string"},{"name":"nameOnly","in":"query","description":"exclude API and Domain information","required":false,"type":"boolean","default":false},{"$ref":"#/parameters/page"},{"$ref":"#/parameters/limit"},{"$ref":"#/parameters/sort"},{"$ref":"#/parameters/order"}],"responses":{"200":{"description":"organization projects","schema":{"$ref":"#/definitions/ProjectsJson"}},"404":{"description":"specified org not found"}},"security":[{"TokenSecured":[]}]}}},"securityDefinitions":{"TokenSecured":{"type":"apiKey","name":"Authorization","in":"header"}},"definitions":{"ApiMetadata":{"type":"object","required":["categories","tags"],"properties":{"defaultVersion":{"type":"string"},"categories":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"tags":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"links":{"type":"array","uniqueItems":true,"items":{"$ref":"#/definitions/ApiMetadataLink"}}}},"ApiMetadataLink":{"type":"object","required":["type","url"],"properties":{"type":{"type":"string"},"url":{"type":"string"}}},"LifecycleSettings":{"type":"object","properties":{"published":{"type":"boolean"}}},"Private":{"type":"object","required":["private"],"properties":{"private":{"type":"boolean"}}},"GitHubExportSettings":{"type":"object","required":["token","owner","repository","branch","notificationEmail"],"properties":{"token":{"type":"string"},"owner":{"type":"string"},"repository":{"type":"string"},"branch":{"type":"string"},"path":{"type":"string"},"yamlPath":{"type":"string"},"notificationEmail":{"type":"string"}}},"ApisJsonProperty":{"type":"object","properties":{"type":{"type":"string"}},"description":"an API property"},"ApisJson":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"url":{"type":"string"},"created":{"type":"string","format":"date-time"},"modified":{"type":"string","format":"date-time"},"specificationVersion":{"type":"string"},"offset":{"type":"integer","format":"int32"},"totalCount":{"type":"integer","format":"int64"},"apis":{"type":"array","items":{"$ref":"#/definitions/ApisJsonApi"}}}},"ApisJsonApi":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"tags":{"type":"array","uniqueItems":true,"items":{"type":"string"}},"properties":{"type":"array","items":{"$ref":"#/definitions/ApisJsonProperty"}}}},"ApisJsonUrlProperty":{"allOf":[{"$ref":"#/definitions/ApisJsonProperty"},{"type":"object","properties":{"url":{"type":"string","format":"url"}},"description":"an API property where the value is a URL"}]},"ApisJsonValueProperty":{"allOf":[{"$ref":"#/definitions/ApisJsonProperty"},{"type":"object","properties":{"value":{"type":"string"}},"description":"an API property with a string value"}]},"VersionMetadata":{"type":"object","properties":{"codegenSettings":{"$ref":"#/definitions/CodegenSettings"}}},"CodegenSettings":{"type":"object","properties":{"server":{"type":"object","additionalProperties":{"$ref":"#/definitions/CodegenLanguage"}},"client":{"type":"object","additionalProperties":{"$ref":"#/definitions/CodegenLanguage"}}}},"CodegenLanguage":{"type":"object","required":["visible"],"properties":{"visible":{"type":"boolean","default":true},"customValues":{"type":"object","additionalProperties":{"type":"string"}}}},"Comparison":{"type":"array","description":"a list of differences between two APIs","items":{"$ref":"#/definitions/ComparisonPart"}},"ComparisonPart":{"type":"object","description":"a part of the API that was (or wasn't) changed","required":["type"],"properties":{"type":{"type":"string","description":"the type of change that this part describes\n* UNMODIFIED - this part is the same in both APIs. Only available for FULL compare.\n* INSERTED - this is present in `other` but missing in `base`. `base` will not be present.\n* DELETED - this is present in `base` but missing in `other`. `other` will not be present.\n* CHANGED - this has been changed between `base` and `other`. Both `base` and `other` present.\n","enum":["UNMODIFIED","INSERTED","DELETED","CHANGED"]},"base":{"$ref":"#/definitions/ComparisonDetail"},"other":{"$ref":"#/definitions/ComparisonDetail"}}},"ComparisonDetail":{"type":"object","description":"details for one side of a ComparisonPart","required":["startPosition","endPosition","content"],"properties":{"startPosition":{"$ref":"#/definitions/Position"},"endPosition":{"$ref":"#/definitions/Position"},"content":{"description":"the content of the API definition between `startPosition` and `endPosition`","type":"string"},"path":{"description":"the path to the object (notation similar to JSONPath)","type":"string"}}},"Position":{"type":"object","description":"a position in a text document","required":["line","column"],"properties":{"line":{"type":"integer"},"column":{"type":"integer"}}},"SpecId":{"type":"object","required":["owner","name","version"],"properties":{"owner":{"type":"string"},"name":{"type":"string"},"version":{"type":"string"}}},"PluginDefinition":{"x-swagger-router-model":"com.smartbear.swaggerhub.plugins.model.PluginDefinition","type":"object","required":["name","implementingClass","version","createdBy","createdOn","enabled","configurationSchema"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"implementingClass":{"type":"string"},"version":{"type":"string"},"createdBy":{"type":"string"},"createdOn":{"type":"string","format":"date-time"},"enabled":{"type":"boolean"},"configurationSchema":{"type":"object"},"limit":{"description":"count of allowed configurations","type":"integer","format":"int64"}}},"PluginConfiguration":{"x-swagger-router-model":"com.smartbear.swaggerhub.plugins.model.PluginConfiguration","type":"object","required":["name","objectId","lifecycles","ownerName","path","definitionId"],"properties":{"id":{"type":"string","format":"UUID"},"name":{"type":"string"},"objectId":{"type":"string"},"lifecycles":{"type":"array","items":{"type":"string"}},"configuration":{"type":"object","additionalProperties":{"type":"string"}},"ownerName":{"type":"string"},"path":{"type":"string"},"definitionId":{"type":"string"},"draft":{"type":"boolean"}}},"SystemPluginConfiguration":{"x-swagger-router-model":"com.smartbear.swaggerhub.plugins.model.SystemPluginConfiguration","type":"object","required":["lifecycles","implementingClass","version"],"properties":{"id":{"type":"string","format":"UUID"},"lifecycles":{"type":"array","items":{"type":"string"}},"configuration":{"type":"object","additionalProperties":{"type":"string"}},"implementingClass":{"type":"string"},"version":{"type":"string"}}},"User":{"type":"object","properties":{"id":{"type":"string"},"active":{"type":"boolean"}}},"UserCredentials":{"type":"object","properties":{"username":{"type":"string"},"password":{"type":"string"}}},"Comment":{"type":"object","properties":{"id":{"type":"string"},"user":{"$ref":"#/definitions/User"},"created":{"type":"string","format":"date-time"},"modified":{"type":"string","format":"date-time"},"body":{"type":"string"}},"required":["id","user","created","body"]},"ClosableComment":{"allOf":[{"$ref":"#/definitions/Comment"},{"type":"object","properties":{"position":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["OPEN","RESOLVED"]},"replies":{"type":"array","items":{"$ref":"#/definitions/Comment"}}}}],"required":["position","status"]},"NewComment":{"type":"object","properties":{"position":{"type":"integer","format":"int32"},"body":{"type":"string"},"replies":{"type":"array","items":{"$ref":"#/definitions/NewReply"}}},"required":["position","body"]},"NewReply":{"type":"object","properties":{"body":{"type":"string"}},"required":["body"]},"CommentPatch":{"type":"object","properties":{"body":{"type":"string"}}},"ClosableCommentPatch":{"allOf":[{"$ref":"#/definitions/CommentPatch"},{"type":"object","properties":{"position":{"type":"integer","format":"int32"}}}]},"CommentsBatch":{"type":"object","properties":{"addComment":{"type":"array","items":{"$ref":"#/definitions/NewComment"}},"updateComment":{"type":"object","additionalProperties":{"$ref":"#/definitions/ClosableCommentPatch"}},"updateStatus":{"type":"object","additionalProperties":{"type":"string","enum":["OPEN","RESOLVED"]}},"deleteComment":{"type":"array","items":{"type":"string"}},"addReply":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/definitions/NewReply"}}},"updateReply":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"$ref":"#/definitions/CommentPatch"}}},"deleteReply":{"type":"object","additionalProperties":{"type":"array","uniqueItems":true,"items":{"type":"string"}}}}},"AccessToken":{"type":"object","properties":{"token":{"type":"string"}}},"Template":{"type":"object","required":["id","title"],"properties":{"id":{"type":"string"},"title":{"type":"string"}}},"TemplateCatalog":{"type":"object","properties":{"templates":{"type":"array","items":{"$ref":"#/definitions/Template"}},"default":{"$ref":"#/definitions/Template"}}},"Collaboration":{"x-swagger-router-model":"com.smartbear.swaggerhub.collaboration.models.Collaboration","type":"object","required":["hint"],"properties":{"owner":{"type":"string","readOnly":true},"owners":{"type":"array","items":{"type":"string","uniqueItems":true},"readOnly":true},"hint":{"$ref":"#/definitions/CollaborationHint"},"members":{"type":"array","items":{"$ref":"#/definitions/CollaborationMembership"}},"pendingMembers":{"type":"array","items":{"$ref":"#/definitions/CollaborationMembership"}},"teams":{"type":"array","items":{"$ref":"#/definitions/CollaborationTeamMembership"}}}},"CollaborationMembershipList":{"type":"object","required":["hint"],"properties":{"hint":{"$ref":"#/definitions/CollaborationHint"},"items":{"type":"array","items":{"$ref":"#/definitions/CollaborationMembership"}}}},"CollaborationRoles":{"type":"object","properties":{"owner":{"type":"string"},"api":{"type":"string"},"roles":{"type":"array","uniqueItems":true,"items":{"type":"string","enum":["EDIT","COMMENT","VIEW"]}}}},"CollaborationTeamMembership":{"allOf":[{"$ref":"#/definitions/CollaborationMembership"},{"type":"object","properties":{"members":{"type":"array","items":{"$ref":"#/definitions/CollaborationMember"},"readOnly":true}}}]},"CollaborationHint":{"type":"object","required":["type"],"properties":{"type":{"type":"string","format":"uuid","description":"type identifier of the managed entity"}}},"CollaborationMembership":{"allOf":[{"$ref":"#/definitions/CollaborationMember"},{"type":"object","required":["roles"],"properties":{"roles":{"type":"array","items":{"type":"string","enum":["EDIT","COMMENT","VIEW"]}},"donotdisturb":{"type":"boolean","readOnly":true},"blocked":{"type":"boolean","readOnly":true}}}]},"CollaborationMember":{"type":"object","required":["name"],"properties":{"uuid":{"type":"string","readOnly":true},"name":{"type":"string"},"title":{"type":"string","readOnly":true},"startTime":{"type":"string","format":"date-time","readOnly":true}}},"ProjectEntry":{"x-swagger-router-model":"com.smartbear.swaggerhub.registry.model.ProjectEntry","type":"object","required":["groupId","projectId","name"],"properties":{"groupId":{"type":"string"},"projectId":{"type":"string"},"name":{"type":"string"},"apis":{"type":"array","items":{"$ref":"#/definitions/EntryId"}},"domains":{"type":"array","items":{"$ref":"#/definitions/EntryId"}}}},"ProjectsJson":{"type":"object","properties":{"offset":{"type":"integer","format":"int32"},"totalCount":{"type":"integer","format":"int64"},"projects":{"type":"array","items":{"$ref":"#/definitions/ProjectEntry"}}}},"EntryId":{"x-swagger-router-model":"com.smartbear.swaggerhub.registry.EntryId","type":"object","properties":{"owner":{"type":"string"},"name":{"type":"string"},"version":{"type":"string"}}},"ProjectMember":{"type":"object","required":["name","roles","type"],"properties":{"name":{"type":"string"},"type":{"type":"string","default":"USER","enum":["USER","TEAM"]},"roles":{"type":"array","items":{"type":"string"}}}},"ProjectMemberList":{"type":"object","properties":{"members":{"type":"array","items":{"$ref":"#/definitions/ProjectMember"}}}},"SimpleSpec":{"type":"object","properties":{"owner":{"type":"string"},"name":{"type":"string"}}},"MissingSpecMembers":{"type":"object","properties":{"spec":{"$ref":"#/definitions/SimpleSpec"},"names":{"type":"array","items":{"type":"string"}}}},"NotCollaboratorProjectMembers":{"type":"object","properties":{"missingApisMembers":{"type":"array","items":{"$ref":"#/definitions/MissingSpecMembers"}},"missingDomainsMembers":{"type":"array","items":{"$ref":"#/definitions/MissingSpecMembers"}},"missingApisTeams":{"type":"array","items":{"$ref":"#/definitions/MissingSpecMembers"}},"missingDomainsTeams":{"type":"array","items":{"$ref":"#/definitions/MissingSpecMembers"}}}},"Page":{"type":"object","properties":{"offset":{"type":"integer","format":"int32"},"total":{"type":"integer","format":"int64"},"items":{"type":"array","items":{"type":"object"}}}}},"parameters":{"owner":{"name":"owner","in":"path","description":"API or Domaion owner identifier","required":true,"type":"string"},"version":{"name":"version","in":"path","description":"version identifier","required":true,"type":"string"},"filter":{"name":"filter","x-inflector-hidden":true,"in":"query","description":"filter to apply, 'user' filters by current user","enum":["user"],"type":"string"},"state":{"name":"state","in":"query","description":"matches against published state of the spec\n* UNPUBLISHED - spec is a draft, a work in progress\n* PUBLISHED - spec is a stable version ready for consuming from client applications\n* ANY - either PUBLISHED or UNPUBLISHED\n","required":false,"type":"string","default":"ALL","enum":["ALL","PUBLISHED","UNPUBLISHED"]},"api":{"name":"api","in":"path","description":"API identifier","required":true,"type":"string"},"domain":{"name":"domain","in":"path","description":"domain identifier","required":true,"type":"string"},"newName":{"name":"newName","in":"query","description":"New name","required":true,"type":"string"},"newOwner":{"name":"newOwner","in":"query","description":"New owner","required":true,"type":"string"},"page":{"name":"page","in":"query","description":"page to return","required":false,"type":"integer","default":0,"format":"int32"},"limit":{"name":"limit","in":"query","description":"number of results per page","required":false,"type":"integer","default":10,"format":"int32"},"sort":{"name":"sort","in":"query","description":"sort criteria or result set\n* NAME -\n* UPATED\n* CREATED\n* OWNER\n","required":false,"type":"string","default":"NAME","enum":["NAME","UPDATED","CREATED","OWNER"]},"order":{"name":"order","in":"query","description":"sort order","required":false,"type":"string","default":"ASC","enum":["ASC","DESC"]},"apiDefinition":{"name":"definition","in":"body","description":"the Swagger definition of this API","required":true,"schema":{"type":"string"}},"domainDefinition":{"name":"definition","in":"body","description":"the Swagger definition of this Domain","schema":{"type":"string"}},"generatorType":{"name":"generatorType","in":"path","description":"type of generator","required":true,"type":"string","enum":["server","client","documentation","other"]},"isPrivate":{"name":"isPrivate","in":"query","description":"Defines whether the API has to be private","required":false,"type":"boolean","default":false},"pluginConfiguration":{"name":"pluginConfiguration","in":"body","description":"the Plugin configuration to be added or updated","required":true,"schema":{"$ref":"#/definitions/PluginConfiguration"}},"pluginDefinition":{"name":"pluginDefinition","in":"body","description":"the Plugin definition to be registered or disabled","required":true,"schema":{"$ref":"#/definitions/PluginDefinition"}},"systemPluginConfiguration":{"name":"systemPluginConfiguration","in":"body","description":"the System Plugin configuration to be added or updated","required":true,"schema":{"$ref":"#/definitions/SystemPluginConfiguration"}},"force":{"name":"force","in":"query","description":"force update","required":false,"type":"boolean"},"comment":{"name":"comment","in":"path","description":"comment identifier","required":true,"type":"string"},"commentStatus":{"name":"status","in":"path","description":"comment status","required":true,"type":"string","enum":["OPEN","RESOLVED"]},"reply":{"name":"reply","in":"path","description":"reply identifier","required":true,"type":"string"},"template":{"name":"template","in":"query","description":"Template id","required":true,"type":"string"},"method":{"in":"query","name":"method","description":"The method to use for comparing two APIs.\n* FULL - Full line-by-line text comparison of the two APIs\n* LOGICAL - Compares if the two API's are logically equivalent. Ignores non-structural fields like descriptions, examples etc. Also ignores order when not important.\n* STRUCTURAL - Like LOGICAL but also compares non-structural fields\n","required":true,"type":"string","enum":["FULL","LOGICAL","STRUCTURAL"]},"specType":{"name":"specType","in":"query","description":"Type of Swagger specs to search\n* API - APIs only\n* DOMAIN - Domains only\n* ANY - Both APIs and Domains\n","required":false,"type":"string","default":"ANY","enum":["API","DOMAIN","ANY"]},"visibility":{"name":"visibility","in":"query","description":"The visibility of a spec in SwaggerHub\n* PUBLIC - can be viewed by anyone\n* PRIVATE - can only be viewed by you or your Org and those that you are collaborating with or have shared it with\n* ANY - either PUBLIC or PRIVATE\n","required":false,"type":"string","default":"ANY","enum":["PUBLIC","PRIVATE","ANY"]},"projectMemberList":{"name":"projectMemberList","in":"body","description":"the list of project member names","required":true,"schema":{"$ref":"#/definitions/ProjectMemberList"}},"project":{"name":"project","in":"body","description":"the project to insert or update","required":true,"schema":{"$ref":"#/definitions/ProjectEntry"}},"forceUpdateProject":{"name":"forceUpdateProject","in":"query","description":"Defines whether to force updating project in case any members don't have access\nto project's APIs and domains, either by saving changes regardless or by updating permissions\nof API/Domain - User assigning VIEW permission\n","required":false,"type":"string","enum":["UPDATE_PERMISSIONS","KEEP_PERMISSIONS"]}}}